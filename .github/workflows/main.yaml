name: Run Pre-Built and Placed Rust API Exec on EC2

on:
  push:
    branches: [ "main" ] # This workflow triggers on pushes to the 'main' branch.

jobs:
  run_api:
    runs-on: ubuntu-latest # The job will run on a fresh Ubuntu runner provided by GitHub Actions.
    steps:
      - name: Connect to EC2 instance and Run API
        uses: appleboy/ssh-action@master # Uses the SSH action to connect to your EC2 instance and run commands.
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Corrected path to include the .exe extension
            FINAL_BINARY_PATH="$HOME/transfers/blazing_rust_000.exe" 
            
            echo "Clearing Nginx cache..."
            sudo rm -rf /var/cache/nginx/*

            echo "Checking and killing processes on port 7000..."
            if command -v lsof >/dev/null 2>&1; then
              if sudo lsof -ti:7000; then
                echo "Killing processes on port 7000 using lsof..."
                sudo kill -9 $(sudo lsof -ti:7000)
              else
                echo "No process found listening on port 7000 using lsof."
              fi
            else
              echo "lsof not found, trying netstat..."
              if sudo netstat -tuln | grep :7000; then
                echo "Killing processes on port 7000 using netstat..."
                sudo kill -9 $(sudo netstat -tulnp | grep :7000 | awk '{print $7}' | cut -d'/' -f1)
              else
                echo "No process found listening on port 7000 using netstat."
              # This assumes lsof/netstat are installed. If not, this block will fail.
              fi
            fi
            
            echo "Verifying executable at $FINAL_BINARY_PATH..."
            if [ ! -f "$FINAL_BINARY_PATH" ]; then
                echo "Error: Executable NOT found at $FINAL_BINARY_PATH. Cannot run."
                exit 1 # Fail the SSH step if the binary isn't there.
            fi
            # Ensure it's executable - although for a Windows .exe, this won't help it run on Linux.
            sudo chmod +x "$FINAL_BINARY_PATH"
            echo "Executable permissions set."

            echo "Starting Rust API on port 7000 in a detached screen session..."
            # Attempt to start the API. This will fail if it's a Windows executable.
            # You might see an error like "cannot execute binary file: Exec format error"
            sudo screen -dmS blazing_rust_000 "$FINAL_BINARY_PATH"
            
            echo "Restarting Nginx..."
            sudo systemctl restart nginx
            echo "Reloading Nginx configuration..."
            sudo systemctl reload nginx 

      - name: Wait for API startup and Nginx reload
        run: |
          echo "Waiting 5 seconds for services to come online..."
          sleep 5